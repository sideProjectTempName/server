name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4
        with:
          ref: main

      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21g

      - name: application.yml 파일 만들기
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_MAIN_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: application-aws.yml 파일 만들기
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_MAIN_AWS_PROPERTIES }}" > ./src/main/resources/application-aws.yml

      - name: application.yml 파일 만들기
        run: |
          mkdir -p ./src/test/resources
          echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > ./src/test/resources/application.yml

      - name: application.yml 파일 만들기
        run: |
          mkdir -p ./src/test/resources
          echo "${{ secrets.APPLICATION_TEST_AWS_PROPERTIES }}" > ./src/test/resources/application-test.yml

      - name: 권한 주기
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -x test

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/server/temp
